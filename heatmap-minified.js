/*Author:SunitRaut <github.com/SunitRaut/> | License: GPL-3.0 | View library on github: https://github.com/SunitRaut/Heatmap-Visualization-JS/ */
//Minified JS below
classHeatMap{constructor(){this.sensing_circle_radius=10;this.sensing_ellipse_radius=22;this.sensing_ellipse_param=0.8;this.wind_speed=0;this.wind_dir=0;this.colorMax=[255,0,0];this.colorMin=[0,255,0];this.colorCase=[1,-1,0];this.resolution=50;this.spread=0.8;}setMaxMin(cMax,cMin){this.colorMax=cMax;this.colorMin=cMin;this.calculateColorCase();}calculateColorCase(){for(vari=0;i<3;i++){if(this.colorMax[i]==this.colorMin[i]){this.colorCase[i]=0;}elseif(this.colorMax[i]>this.colorMin[i]){this.colorCase[i]=1;}else{this.colorCase[i]=-1;}}}postSomething(){console.log("PostedSomething");}setResolution(res){this.resolution=res;}defineRegion(locations){this.locations=locations;this.pxPerLength=40000;varLatList=[];varLngList=[];for(vara=0;a<((this.locations).length);a++){LatList[a]=Number(this.locations[a][0]);LngList[a]=Number(this.locations[a][1]);}console.log("Hello");varavg=0;varnCount=0;for(vara=0;a<((this.locations).length-1);a++){for(varb=a+1;b<((this.locations).length);b++){varf1=Math.abs(LatList[a]-LatList[b]);varf2=Math.abs(LngList[a]-LngList[b]);varf=f1*f1+f2*f2;vardf=Math.sqrt(f);avg+=df;nCount++;}}avg=avg/nCount;console.log(avg);this.avgdis=avg;this.sensing_circle_radius=this.resolution/2;this.sensing_ellipse_radius=this.spread*this.resolution;this.sensing_ellipse_param=0.8;this.vNorth=max(LatList)+2*this.avgdis;this.vSouth=min(LatList)-2*this.avgdis;this.vEast=max(LngList)+2*this.avgdis;this.vWest=min(LngList)-2*this.avgdis;this.LatPx=[];this.LngPx=[];for(vara=0;a<((this.locations).length);a++){this.LatPx[a]=Math.ceil((this.vNorth-LatList[a])*(this.resolution/this.avgdis));this.LngPx[a]=Math.floor((LngList[a]-this.vWest)*(this.resolution/this.avgdis));}this.vHeight=Math.ceil((this.vNorth-this.vSouth)*(this.resolution/this.avgdis));this.vWidth=Math.ceil((this.vEast-this.vWest)*(this.resolution/this.avgdis));vardfCount=0;varellipseSet1=[];varellipseSet2=[];vardfLength=[];for(vara=0;a<((this.locations).length-1);a++){for(varb=a+1;b<((this.locations).length);b++){varf1=Math.abs(this.LatPx[a]-this.LatPx[b]);varf2=Math.abs(this.LngPx[a]-this.LngPx[b]);varf=f1*f1+f2*f2;vardf=Math.sqrt(f);console.log(2*this.resolution+","+df);if(df<=(2*this.resolution)){ellipseSet1[dfCount]=a;ellipseSet2[dfCount]=b;dfLength[dfCount]=df;dfCount++;}}}varimageBounds={north:this.vNorth,south:this.vSouth,east:this.vEast,west:this.vWest};this.iMap=[];for(leti=0;i<this.vWidth;i++){this.iMap[i]=[];for(letj=0;j<this.vHeight;j++){this.iMap[i][j]=0;}}for(vari=0;i<this.vWidth;i++){for(varj=0;j<this.vHeight;j++){this.iMap[i][j]=0;vardCount=0;for(vara=0;a<(dfLength).length;a++){varellipseMid1=(this.LatPx[ellipseSet1[a]]+this.LatPx[ellipseSet2[a]])/2;varellipseMid2=(this.LngPx[ellipseSet1[a]]+this.LngPx[ellipseSet2[a]])/2;vare1=Math.abs(this.LatPx[ellipseSet1[a]]-j);vare2=Math.abs(this.LngPx[ellipseSet1[a]]-i);vare3=Math.abs(this.LatPx[ellipseSet2[a]]-j);vare4=Math.abs(this.LngPx[ellipseSet2[a]]-i);vare5=Math.abs(ellipseMid1-j);vare6=Math.abs(ellipseMid2-i);vare8=e1*e1+e2*e2;vare9=e3*e3+e4*e4;vare10=e5*e5+e6*e6;vard1=Math.sqrt(e8);if(d1>2*this.resolution)continue;vard2=Math.sqrt(e9);if(d2>2*this.resolution)continue;vard3=Math.sqrt(e10);if((Math.abs(d1+d2-(this.sensing_ellipse_param*d3)))<=((2-this.sensing_ellipse_param)*(this.sensing_ellipse_radius))){dCount++;break;}}for(vara=0;a<((this.locations).length);a++){vare1=Math.abs(this.LatPx[a]-j);vare2=Math.abs(this.LngPx[a]-i);vare5=e1*e1+e2*e2;vard=Math.sqrt(e5);if(d<=this.sensing_circle_radius)dCount++;if(d<=1)this.iMap[i][j]=2;}if((dCount>0)&&(this.iMap[i][j]!=2)){this.iMap[i][j]=1;}}}returnthis.iMap;}createHeatMap(data){this.data=data;varweight=0;varcomputation=0;this.wMap=[];for(leti=0;i<this.vWidth;i++){this.wMap[i]=[];for(letj=0;j<this.vHeight;j++){this.wMap[i][j]=0;}}for(vari=0;i<this.vWidth;i++){for(varj=0;j<this.vHeight;j++){vardCount=0;varwei=[];vardis=[];vardistances=[];varwCount=0;varmul=1;varsum=0;vardSum=0;if(this.iMap[i][j]!=0){for(vara=0;a<((this.locations).length);a++){vared1=Math.abs(this.LatPx[a]-j);vared2=Math.abs(this.LngPx[a]-i);vared8=ed1*ed1+ed2*ed2;vardd1=Math.sqrt(ed8);varddd1=dd1;if(this.wind_speed>0){varx=i;vary=-1*j;varx1=this.LngPx[a];vary1=-1*this.LatPx[a];varslope=(y1-y)/(x1-x);varangle=Math.atan(slope)*(180/3.14);vartheta=0;varheading=0;if((x>x1)&&(y>y1))theta=0+angle;if((x<x1)&&(y>y1))theta=180+angle;if((x<x1)&&(y<y1))theta=180+angle;if((x>x1)&&(y<y1))theta=360+angle;heading=(450-theta)%360;vardiff=0;if(heading-this.wind_dir<=180)diff=Math.abs(heading-this.wind_dir);elseif(heading-this.wind_dir>=180)diff=Math.abs(360-(heading-this.wind_dir))%180;ddd1=(0.1)*(this.wind_speed)*Math.pow(((diff)/180),2)+dd1;}if((dd1)<(2*this.resolution)){distances[wCount]=dd1;wei[wCount]=this.data[a];dis[wCount]=ddd1;wCount++;}}sum=0;for(varbi=0;bi<dis.length;bi++){mul=wei[bi];for(varbj=0;bj<dis.length;bj++){if(bj!=bi)mul*=Math.pow(dis[bj],2);}sum+=mul;}dSum=0;for(varbi=0;bi<dis.length;bi++){mul=1;for(varbj=0;bj<dis.length;bj++){if(bj!=bi)mul*=Math.pow(dis[bj],2);}dSum+=mul;}weight=0;weight=sum/dSum;this.wMap[i][j]=weight;}}}varfilter=[[1,1,1],[1,1,1],[1,1,1]];for(vari=0;i<this.vWidth-3;i++){for(varj=0;j<this.vHeight-3;j++){if(this.iMap[i][j]!=0){varsum=0;varfsum=0;for(vara=0;a<9;a++){varaa=Math.floor(a/3);varab=a%3;if(this.iMap[i+aa][j+ab]!=0){sum+=this.wMap[i+aa][j+ab];fsum+=1;}}sum=sum/fsum;varw=sum;if(w>100){w=100;}this.wMap[i][j]=[];this.wMap[i][j]['red']=0;this.wMap[i][j]['green']=0;this.wMap[i][j]['blue']=0;varred,green,blue=0;if(this.colorCase[0]==1){if(w<=50){red=((this.colorMax[0]-this.colorMin[0])*2*(w)/100)+this.colorMin[0];}else{red=this.colorMax[0];}}elseif(this.colorCase[0]==-1){if(w<=50){red=this.colorMin[0];}else{red=((this.colorMin[0]-this.colorMax[0])*(100-w))/100+this.colorMax[0];}}else{red=this.colorMin[0];}if(this.colorCase[1]==1){if(w<=50){green=((this.colorMax[1]-this.colorMin[1])*2*(w)/100)+this.colorMin[1];}else{green=this.colorMax[1];}}elseif(this.colorCase[1]==-1){if(w<=50){green=this.colorMin[1];}else{green=((this.colorMin[1]-this.colorMax[1])*(100-w))/100+this.colorMax[1];}}else{green=this.colorMin[1];}if(this.colorCase[2]==1){if(w<=50){blue=((this.colorMax[2]-this.colorMin[2])*2*(w)/100)+this.colorMin[2];}else{blue=this.colorMax[2];}}elseif(this.colorCase[2]==-1){if(w<=50){blue=this.colorMin[2];}else{blue=((this.colorMin[2]-this.colorMax[2])*(100-w))/100+this.colorMax[2];}}else{blue=this.colorMin[2];}if(red>255)red=255;if(green>255)green=255;if(blue>255)blue=255;red=Math.floor(red);green=Math.floor(green);blue=Math.floor(blue);red=red-red%4;green=green-green%4;blue=blue-blue%4;this.wMap[i][j]['red']=red;this.wMap[i][j]['green']=green;this.wMap[i][j]['blue']=blue;}}}returnthis.wMap;}}functionmax(input){if(toString.call(input)!=="[objectArray]")returnfalse;returnMath.max.apply(null,input);}functionmin(input){if(toString.call(input)!=="[objectArray]")returnfalse;returnMath.min.apply(null,input);}
